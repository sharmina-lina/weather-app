
name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [22.x]
                # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

        steps:
        - uses: actions/checkout@v4
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v4
          with:
            node-version: ${{ matrix.node-version }}
            cache: 'npm'
        - run: npm install
        - run: npm ci  # Verify react-scripts is installed
        - run: npm run build --if-present
        - name: Upload build artifacts
          if: success()
          uses: actions/upload-artifact@v3
          with:
            name: build-artifacts
            path: ./build # Adjust the path if your build artifacts are in a different folder
    
    

    build_docker_image:
        runs-on: ubuntu-latest
        needs: build
        strategy:
            matrix:
                node-version: [22.x]
          
        steps:
        - name: Check out repository
          uses: actions/checkout@v4
          
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
          
        - name: Log in to Docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
          
        - name: Build and push Docker image
          uses: docker/build-push-action@v4
          with:
            context: .
            push: true
            tags: sharmina/digitalclock_v1:latest  # Replace with your Docker Hub username and repo name
      
    deploy:
        runs-on: self-hosted
        needs: build_docker_image  # This job will run only after the build job completes successfully
        strategy:
            matrix:
                node-version: [22.x]
              
        steps:
        - name: Prepare SSH key
          run: |
            echo "${{ secrets.VM_SSH_KEY }}" > vm_key.pem
            chmod 600 vm_key.pem
              
        - name: Deploy Docker container on VM
          env:
            VM_HOST: ${{ secrets.VM_HOST }}
            VM_USER: ${{ secrets.VM_USER }}
          run: |
                ssh -vvv -tt -o StrictHostKeyChecking=no -i vm_key.pem $VM_USER@$VM_HOST << 'EOF'
                  # Log in to Docker Hub (on the VM)
                  echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
                          
                  # Pull the latest Docker image
                  docker pull sharmina/digitalclock_v1:latest
              
                  # Stop and remove any existing container
                  
                  docker stop digital-clock || true
                  docker rm digital-clock || true
                          
              
                  # Run the new container
                  docker run -d -p 3000:3000 --name digital-clock sharmina/digitalclock_v1:latest
                  exit
                EOF
    
